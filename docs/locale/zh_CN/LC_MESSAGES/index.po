# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020-2023, binaryai <binaryai@tencent.com>
# This file is distributed under the same license as the BinaryAI SDK
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: BinaryAI SDK \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-23 07:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../../README.md:2
msgid "BinaryAI Python SDK"
msgstr ""

#: ../../../README.md:4
msgid ""
"![PUBLISH](https://github.com/binaryai/sdk/workflows/PUBLISH/badge.svg) "
"[![readthedocs](https://readthedocs.org/projects/binaryai/badge/?version=stable&style=flat)](https://binaryai.readthedocs.io/)"
" "
"[![Downloads](https://pepy.tech/badge/binaryai/month)](https://pepy.tech/project/binaryai/month)"
" "
"[![Gitter](https://badges.gitter.im/binaryai/community.svg)](https://gitter.im/binaryai/community?utm_source=badge&utm_medium=badge&utm_campaign"
"=pr-badge)"
msgstr ""

#: ../../../README.md:4
msgid "PUBLISH"
msgstr ""

#: ../../../README.md:4
msgid "readthedocs"
msgstr ""

#: ../../../README.md:4
msgid "Downloads"
msgstr ""

#: ../../../README.md:4
msgid "Gitter"
msgstr ""

#: ../../../README.md:9
msgid ""
"[BinaryAI](https://www.binaryai.cn) is a binary file security analysis "
"platform. This SDK aims at providing a simple client to upload file and "
"get analysis result. It also works as a demo on calling BinaryAI's "
"GraphQL API directly."
msgstr ""
"[BinaryAI](https://www.binaryai.cn)是腾讯安全科恩实验室基于在静态分析和AI安全领域的经验研发的二进制安全智能分析平台。本SDK旨在帮助用户上传文件并获取分析结果，也可以作为调用BinaryAI"
" API的一个参考"

#: ../../../README.md:13
msgid ""
"To use SDK, you need a valid credential. Read [BinaryAI "
"docs](https://www.binaryai.cn/doc/) about detailed instructions."
msgstr "要使用SDK，你需要相应的凭据。查看[BinaryAI的文档](https://www.binaryai.cn/doc/) 获取指引。"

#: ../../../README.md:15
msgid "Dependency"
msgstr "依赖版本"

#: ../../../README.md:17
msgid "Python >= 3.9"
msgstr ""

#: ../../../README.md:19
msgid "Download and install"
msgstr "下载和安装"

#: ../../../README.md:25
msgid "Quick start"
msgstr "快速入门"

#: ../../../README.md:27
msgid "See the [SDK document](https://binaryai.readthedocs.io) for guide."
msgstr "请查看[SDK文档](https://binaryai.readthedocs.io)。"

#: ../../../README.md:29
msgid "Internals"
msgstr "内部细节"

#: ../../../README.md:31
msgid "Endpoints"
msgstr "API地址"

#: ../../../README.md:33
msgid "The default endpoint is `https://api.binaryai.cn/v1/endpoint`."
msgstr "对公众的默认API地址是`https://api.binaryai.cn/v1/endpoint`。"

#: ../../../README.md:35
msgid "API Credentials"
msgstr "API凭据"

#: ../../../README.md:37
msgid ""
"API Credentials are used for signing requests. We suggest you using our "
"SDK or our library to sign it, but you can also have your own "
"implementation. We are using the signing method `TC3-HMAC-SHA256`, same "
"with the Tencent Cloud. You can read their "
"[document](https://cloud.tencent.com/document/product/213/30654) about "
"how to sign requests. BinaryAI would require following fields:"
msgstr ""
"API凭据用于签名请求。你可以使用SDK进行签名，但也可以自行编写签名方法。我们使用和腾讯云一致的 `TC3-HMAC-SHA256` "
"方案，你可以阅读 [腾讯云文档](https://cloud.tencent.com/document/product/213/30654) "
"获取技术细节。BinaryAI需要的签名信息是："

#: ../../../README.md:49
msgid "Additional Reading"
msgstr "更多资料"

#: ../../../README.md:51
#, fuzzy
msgid ""
"Read the [Changelog](https://www.binaryai.cn/doc/zh/releasenotes/) of our"
" product, and hope you can also have fun reading papers related to our "
"job:"
msgstr ""
"我们的 "
"[发布记录](https://www.binaryai.cn/doc/zh/releasenotes/releasenotes.html)记录了历史版本，你也可以参考我们此前的论文："

#: ../../../README.md:53
msgid ""
"Yu, Zeping, et al. \"Codecmr: Cross-modal retrieval for function-level "
"binary source code matching.\" Advances in Neural Information Processing "
"Systems 33 (2020): 3872-3883."
msgstr ""

#: ../../../README.md:54
msgid ""
"Yu, Zeping, et al. \"Order matters: Semantic-aware neural networks for "
"binary code similarity detection.\" Proceedings of the AAAI conference on"
" artificial intelligence. Vol. 34. No. 01. 2020."
msgstr ""

#: ../../../README.md:55
msgid ""
"Li, Zongjie, et al. \"Unleashing the power of compiler intermediate "
"representation to enhance neural program embeddings.\" Proceedings of the"
" 44th International Conference on Software Engineering. 2022."
msgstr ""

#: ../../../README.md:56
msgid ""
"Wong, Wai Kin, et al. \"Deceiving Deep Neural Networks-Based Binary Code "
"Matching with Adversarial Programs.\" 2022 IEEE International Conference "
"on Software Maintenance and Evolution (ICSME). IEEE, 2022."
msgstr ""

#: ../../../README.md:57
msgid ""
"Wang, Huaijin, et al. \"Enhancing DNN-Based Binary Code Function Search "
"With Low-Cost Equivalence Checking.\" IEEE Transactions on Software "
"Engineering 49.1 (2022): 226-250."
msgstr ""

#: ../../../README.md:58
msgid ""
"Jia, Ang, et al. \"1-to-1 or 1-to-n? Investigating the Effect of Function"
" Inlining on Binary Similarity Analysis.\" ACM Transactions on Software "
"Engineering and Methodology 32.4 (2023): 1-26."
msgstr ""

#: ../../../README.md:59
msgid ""
"Wang, Huaijin, et al. \"sem2vec: Semantics-aware Assembly Tracelet "
"Embedding.\" ACM Transactions on Software Engineering and Methodology "
"32.4 (2023): 1-34."
msgstr ""

#: ../../../README.md:60
msgid ""
"Jiang, Ling, et al. \"Third-Party Library Dependency for Large-Scale SCA "
"in the C/C++ Ecosystem: How Far Are We?.\" Proceedings of the 32nd ACM "
"SIGSOFT International Symposium on Software Testing and Analysis. 2023."
msgstr ""

#~ msgid ""
#~ "![PUBLISH](https://github.com/binaryai/sdk/workflows/PUBLISH/badge.svg)"
#~ " "
#~ "[![Downloads](https://pepy.tech/badge/binaryai/month)](https://pepy.tech/project/binaryai/month)"
#~ " "
#~ "[![Gitter](https://badges.gitter.im/binaryai/community.svg)](https://gitter.im/binaryai/community?utm_source=badge&utm_medium=badge&utm_campaign"
#~ "=pr-badge)"
#~ msgstr ""

